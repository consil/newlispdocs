Function: net-packet
----------------------------------------

#### syntax: (net-packet *str-packet*)

The function allows custom configured network packets to be sent via a
*raw sockets* interface. The packet in *str-packet* must start with an
IP (Internet Protocol) header followed by either a TCP, UDP or ICMP
header and optional data. newLISP must be run with super user
privileges, and this function is only available on Mac OS X, Linux and
other Unix operating systems and only for IPv4. Currently `net-packet`
is IPv4 only and has been tested on Mac OS X, Linux and OpenBSD.

On success the function returns the number of bytes sent. On failure the
function returns `nil` and both, [net-error](#net-error) and
[sys-error](#sys-error), should be inspected.

When custom configured packets contain zeros in the checksum fields,
`net-packet` will calculate and insert the correct checksums. Already
existing checksums stay untouched.

The following example injects a UDP packet for IP number `192.168.1.92`.
The IP header consists of 20 bytes ending with the target IP number. The
following UDP header has a length of 8 bytes and is followed by the data
string `Hello World`. The checksum bytes in both headers are left as
`0x00 0x00` and will be recalculated internally.

    ; packet as generated by: (net-send-udp "192.168.1.92" 12345 "Hello World")

    (set 'udp-packet (pack (dup "b" 39) '(
        0x45 0x00 0x00 0x27 0x4b 0x8f 0x00 0x00 0x40 0x11 0x00 0x00 192  168  1    95
        192  168  1    92   0xf2 0xc8 0x30 0x39 0x00 0x13 0x00 0x00 0x48 0x65 0x6c 0x6c
        0x6f 0x20 0x57 0x6f 0x72 0x6c 0x64)))

    (unless (net-packet udp-packet)
        (println "net-error: " (net-error))
        (println "sys-error: " (sys-error)))

The `net-packet` function is used when testing net security. Its wrong
application can upset the correct functioning of network routers and
other devices connected to a network. For this reason the function
should only be used on well isolated, private intra-nets and only by
network professionals.

For other examples of packet configuration, see the file
`qa-specific-tests/qa-packet` in the newLISP source distribution.



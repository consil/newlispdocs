Function: multiply
--------------------------------------

#### syntax: (multiply *matrix-A* *matrix-B*)

Returns the matrix multiplication of matrices in *matrix-A* and
*matrix-B*. If *matrix-A* has the dimensions *n* by *m* and *matrix-B*
the dimensions *k* by *l* (*m* and *k* must be equal), the result is an
*n* by *l* matrix. ` multiply` can perform mixed-type arithmetic, but
the results are always double precision floating points, even if all
input values are integers.

The dimensions of a matrix are determined by the number of rows and the
number of elements in the first row. For missing elements in
non-rectangular matrices, `0.0` is assumed. A matrix can either be a
nested list or [array](#array).

    (set 'A '((1 2 3) (4 5 6)))
    (set 'B '((1 2) (1 2) (1 2)))
    (multiply A B)  → ((6 12) (15 30))

    (set 'v '(10 20 30))
    (multiply A (transpose (list v))) → ((140) (320))

When multiplying a matrix with a vector of `n` elements, the vector must
be transformed into `n` rows by `1` column matrix using
[transpose](#transpose).

All operations shown here on lists can be performed on arrays, as well.

See also the matrix operations [det](#det), [invert](#invert),
[mat](#mat) and [transpose](#transpose).



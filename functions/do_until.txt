Function: do-until
--------------------------------------

#### syntax: (do-until *exp-condition* [*body*])

The expressions in *body* are evaluated before *exp-condition* is
evaluated. If the evaluation of *exp-condition* is not `nil`, then the
`do-until` expression is finished; otherwise, the expressions in *body*
get evaluated again. Note that `do-until` evaluates the conditional
expression *after* evaluating the body expressions, whereas
[until](#until) checks the condition *before* evaluating the body. The
return value of the `do-until` expression is the last evaluation of the
*body* expression. If *body* is empty, the last result of
*exp-condition* is returned.

`do-until` also updates the system iterator symbol `$idx`.

    (set 'x 1)
    (do-until (> x 0) (inc x))
    x  → 2

    (set 'x 1)
    (until (> x 0) (inc x))
    x  → 1

While `do-until` goes through the loop at least once, [until](#until)
never enters the loop.

See also the functions [while](#while) and [do-while](#do-while).



#### Functions in alphabetical order

[shell](shell.txt)
[arithmetic](arithmetic.txt)
[abort](abort.txt)
[asin](asin.txt)
[callback](callback.txt)
[command-event](command_event.txt)
[current-line](current_line.txt)
[difference](difference.txt)
[do-until](do_until.txt)
[exec](exec.txt)
[flat](flat.txt)
[global](global.txt)
[lambdap](lambdap.txt)
[macro](macro.txt)
[net-accept](net_accept.txt)
[nth](nth.txt)
[prefix](prefix.txt)
[read](read.txt)
[search](search.txt)
[sleep](sleep.txt)
[sym](sym.txt)
[trace](trace.txt)
[write](write.txt)

#### List processing, flow control and integer arithmetic

[arithmetic](arithmetic.txt)
[++](inci.txt)
[--](deci.txt)
[logical](logical.txt)
[:](colon.txt)
[&](and.txt)
[append](append.txt)
[apply](apply.txt)
[args](args.txt)
[assoc](assoc.txt)
[begin](begin.txt)
[bind](bind.txt)
[bigint](bigint.txt)
[case](case.txt)
[catch](catch.txt)
[chop](chop.txt)
[clean](clean.txt)
[cond](cond.txt)
[cons](cons.txt)
[constant](constant.txt)
[count](count.txt)
[curry](curry.txt)
[def-new](def_new.txt)
[define](define.txt)
[define-macro](define_macro.txt)
[difference](difference.txt)
[do-until](do_until.txt)
[do-while](do_while.txt)
[doargs](doargs.txt)
[dolist](dolist.txt)
[dostring](dostring.txt)
[dotimes](dotimes.txt)
[dotree](dotree.txt)
[dup](dup.txt)
[ends-with](ends_with.txt)
[exists](exists.txt)
[eval](eval.txt)
[expand](expand.txt)
[extend](extend.txt)
[first](first.txt)
[filter](filter.txt)
[find](find.txt)
[find-all](find_all.txt)
[flat](flat.txt)
[fn](fn.txt)
[for](for.txt)
[for-all](for_all.txt)
[if](if.txt)
[index](index.txt)
[intersect](intersect.txt)
[lambda](lambda.txt)
[lambda-macro](lambda_macro.txt)
[last](last.txt)
[length](length.txt)
[let](let.txt)
[letex](letex.txt)
[letn](letn.txt)
[list](list.txt)
[local](local.txt)
[lookup](lookup.txt)
[map](map.txt)
[match](match.txt)
[member](member.txt)
[not](not.txt)
[nth](nth.txt)
[or](or.txt)
[pop](pop.txt)
[pop-assoc](pop_assoc.txt)
[push](push.txt)
[quote](quote.txt)
[ref](ref.txt)
[ref-all](ref_all.txt)
[rest](rest.txt)
[replace](replace.txt)
[reverse](reverse.txt)
[rotate](rotate.txt)
[select](select.txt)
[self](self.txt)
[set](set.txt)
[set-ref](set_ref.txt)
[set-ref-all](set-ref_all.txt)
[setf](setf.txt)
[silent](silent.txt)
[slice](slice.txt)
[sort](sort.txt)
[starts-with](starts_with.txt)
[swap](swap.txt)
[unify](unify.txt)
[unique](unique.txt)
[union](union.txt)
[unless](unless.txt)
[until](until.txt)
[when](when.txt)
[while](while.txt)

#### String and conversion functions

[address](address.txt)
[append](append.txt)
[bigint](bigint.txt)
[bits](bits.txt)
[char](char.txt)
[chop](chop.txt)
[dup](dup.txt)
[ends-with](ends_with.txt)
[encrypt](encrypt.txt)
[eval-string](eval_string.txt)
[eval-string-js](eval-string_js.txt)
[explode](explode.txt)
[extend](extend.txt)
[find](find.txt)
[first](first.txt)
[float](float.txt)
[format](format.txt)
[get-char](get_char.txt)
[get-float](get_float.txt)
[get-int](get_int.txt)
[get-long](get_long.txt)
[get-string](get_string.txt)
[int](int.txt)
[join](join.txt)
[last](last.txt)
[lower-case](lower_case.txt)
[member](member.txt)
[name](name.txt)
[nth](nth.txt)
[pack](pack.txt)
[parse](parse.txt)
[pop](pop.txt)
[push](push.txt)
[regex](regex.txt)
[regex-comp](regex_comp.txt)
[replace](replace.txt)
[rest](rest.txt)
[reverse](reverse.txt)
[rotate](rotate.txt)
[select](select.txt)
[setf](setf.txt)
[slice](slice.txt)
[source](source.txt)
[starts-with](starts_with.txt)
[string](string.txt)
[sym](sym.txt)
[title-case](title_case.txt)
[trim](trim.txt)
[unicode](unicode.txt)
[unpack](unpack.txt)
[upper-case](upper_case.txt)
[utf8](utf8.txt)
[utf8len](utf8len.txt)

#### Floating point math and special functions

[abs](abs.txt)
[acos](acos.txt)
[acosh](acosh.txt)
[add](add.txt)
[array](array.txt)
[array-list](array_list.txt)
[asin](asin.txt)
[asinh](asinh.txt)
[atan](atan.txt)
[atanh](atanh.txt)
[atan2](atan2.txt)
[beta](beta.txt)
[betai](betai.txt)
[binomial](binomial.txt)
[ceil](ceil.txt)
[cos](cos.txt)
[cosh](cosh.txt)
[crc32](crc32.txt)
[dec](dec.txt)
[div](div.txt)
[erf](erf.txt)
[exp](exp.txt)
[factor](factor.txt)
[fft](fft.txt)
[floor](floor.txt)
[flt](flt.txt)
[gammai](gammai.txt)
[gammaln](gammaln.txt)
[gcd](gcd.txt)
[ifft](ifft.txt)
[inc](inc.txt)
[infp](infp.txt)
[log](log.txt)
[min](min.txt)
[max](max.txt)
[mod](mod.txt)
[mul](mul.txt)
[NaNp](NaNp.txt)
[pow](pow.txt)
[round](round.txt)
[sequence](sequence.txt)
[series](series.txt)
[sgn](sgn.txt)
[sin](sin.txt)
[sinh](sinh.txt)
[sqrt](sqrt.txt)
[sub](sub.txt)
[tan](tan.txt)
[tanh](tanh.txt)

#### Matrix functions

[det](det.txt)
[invert](invert.txt)
[mat](mat.txt)
[multiply](multiply.txt)
[transpose](transpose.txt)

#### Array functions

[append](append.txt)
[array](array.txt)
[array-list](array_list.txt)
[array?](arrayp.txt)
[det](det.txt)
[first](first.txt)
[invert](invert.txt)
[last](last.txt)
[mat](mat.txt)
[multiply](multiply.txt)
[nth](nth.txt)
[rest](rest.txt)
[setf](setf.txt)
[slice](slice.txt)
[transpose](transpose.txt)

#### Bit operators

[<<, >>](bit_shift.txt)
[&](bit_and.txt)
[|](bit_inclusive.txt)
[^](bit_exclusive.txt)
[~](bit_not.txt)

#### Predicates

[arrayp](arrayp.txt)
[atom?](atomp.txt)
[bigintp](bigintp.txt)
[context?](contextp.txt)
[directory?](directoryp.txt)
[emptyp](emptyp.txt)
[evenp](evenp.txt)
[filep](filep.txt)
[floatp](floatp.txt)
[globalp](globalp.txt)
[infp](infp.txt)
[integerp](integerp.txt)
[lambdap](lambdap.txt)
[legalp](legalp.txt)
[listp](listp.txt)
[macrop](macrop.txt)
[NaNp](NaNp.txt)
[nilp](nilp.txt)
[nullp](nullp.txt)
[oddp](oddp.txt)
[numberp](numberp.txt)
[primitivep](primitivep.txt)
[protectedp](protectedp.txt)
[quotep](quotep.txt)
[stringp](stringp.txt)
[symbolp](symbolp.txt)
[truep](truep.txt)
[zerop](zerop.txt)

#### Date and time functions

[date](date.txt)
[date-list](date_list.txt)
[date-parse](date_parse.txt)
[date-value](date_value.txt)
[now](now.txt)
[time](time.txt)
[time-of-day](time-of_day.txt)

#### Statistics, simulation and modelling

[amb](amb.txt)
[bayes-query](bayes_query.txt)
[bayes-train](bayes_train.txt)
[corr](corr.txt)
[crit-chi2](crit_chi2.txt)
[crit-f](crit_f.txt)
[crit-t](crit_t.txt)
[crit-z](crit_z.txt)
[kmeans-query](kmeans_query.txt)
[kmeans-train](kmeans_train.txt)
[normal](normal.txt)
[prob-chi2](prob_chi2.txt)
[prob-f](prob_f.txt)
[prob-t](prob_t.txt)
[prob-z](prob_z.txt)
[rand](rand.txt)
[random](random.txt)
[randomize](randomize.txt)
[seed](seed.txt)
[stats](stats.txt)
[t-test](t_test.txt)

#### Pattern recognition

[ends-with](ends_with.txt)
[find](find.txt)
[find-all](find_all.txt)
[match](match.txt)
[parse](parse.txt)
[ref](ref.txt)
[ref-all](ref_all.txt)
[regex](regex.txt)
[replace](replace.txt)
[search](search.txt)
[set-ref](set_ref.txt)
[set-ref-all](set-ref_all.txt)
[starts-with](starts_with.txt)
[unify](unify.txt)

#### Financial math functions

[fv](fv.txt)
[irr](irr.txt)
[nper](nper.txt)
[npv](npv.txt)
[pv](pv.txt)
[pmt](pmt.txt)

#### Input/output and file operations

[append-file](append_file.txt)
[close](close.txt)
[current-line](current_line.txt)
[device](device.txt)
[exec](exec.txt)
[load](load.txt)
[open](open.txt)
[peek](peek.txt)
[print](print.txt)
[println](println.txt)
[read-buffer](read_buffer.txt)
[read-char](read_char.txt)
[read-file](read_file.txt)
[read-key](read_key.txt)
[read-line](read_line.txt)
[read-utf8](read_utf8.txt)
[save](save.txt)
[search](search.txt)
[seek](seek.txt)
[write](write.txt)
[write-char](write_char.txt)
[write-file](write_file.txt)
[write-line](write_line.txt)

#### File and directory management

[change-dir](change_dir.txt)
[copy-file](copy_file.txt)
[delete-file](delete_file.txt)
[directory](directory.txt)
[file-info](file_info.txt)
[make-dir](make_dir.txt)
[real-path](real_path.txt)
[remove-dir](remove_dir.txt)
[rename-file](rename_file.txt)

#### Processes and the Cilk API

[!](shell.txt)
[abort](abort.txt)
[destroy](destroy.txt)
[exec](exec.txt)
[fork](fork.txt)
[pipe](pipe.txt)
[process](process.txt)
[receive](receive.txt)
[semaphore](semaphore.txt)
[send](send.txt)
[share](share.txt)
[spawn](spawn.txt)
[sync](sync.txt)
[wait-pid](wait_pid.txt)

#### HTTP network API

[base64-enc](base64_enc.txt)
[base64-dec](base64_dec.txt)
[delete-url](delete_url.txt)
[get-url](get_url.txt)
[json-error](json_error.txt)
[json-parse](json_parse.txt)
[put-url](put_url.txt)
[post-url](post_url.txt)
[xfer-event](xfer_event.txt)
[xml-error](xml_error.txt)
[xml-parse](xml_parse.txt)
[xml-type-tags](xml-type_tags.txt)

#### Socket TCP/IP and UDP network API

[net-accept](net_accept.txt)
[net-close](net_close.txt)
[net-connect](net_connect.txt)
[net-error](net_error.txt)
[net-eval](net_eval.txt)
[net-interface](net_interface.txt)
[net-ipv](net_ipv.txt)
[net-listen](net_listen.txt)
[net-local](net_local.txt)
[net-lookup](net_lookup.txt)
[net-packet](net_packet.txt)
[net-peek](net_peek.txt)
[net-peek](net_peek.txt)
[net-ping](net_ping.txt)
[net-receive](net_receive.txt)
[net-receive-from](net-receive_from.txt)
[net-receive-udp](net-receive_udp.txt)
[net-select](net_select.txt)
[net-send](net_send.txt)
[net-send-to](net-send_to.txt)
[net-send-udp](net-send_udp.txt)
[net-service](net_service.txt)
[net-sessions](net_sessions.txt)

#### API for newLISP in a web browser

[display-html](display_html.txt)
[eval-string-js](eval_string_js.txt)

#### Reflection and customization

[command-event](command_event.txt)
[error-event](error_event.txt)
[last-error](last_error.txt)
[macro](macro.txt)
[ostype](ostype.txt)
[prefix](prefix.txt)
[prompt-event](prompt_event.txt)
[read-expr](read_expr.txt)
[reader-event](reader_event.txt)
[set-locale](set_locale.txt)
[source](source.txt)
[sys-error](sys_error.txt)
[sys-info](sys_info.txt)
[term](term.txt)

#### System functions

[$](systemsymbol.txt)
[callback](callback.txt)
[catch](catch.txt)
[context](context.txt)
[copy](copy.txt)
[debug](debug.txt)
[default](default.txt)
[delete](delete.txt)
[env](env.txt)
[exit](exit.txt)
[global](global.txt)
[import](import.txt)
[main-args](main_args.txt)
[new](new.txt)
[pretty-print](pretty_print.txt)
[read-expr](read_expr.txt)
[reset](reset.txt)
[signal](signal.txt)
[sleep](sleep.txt)
[struct](struct.txt)
[sym](sym.txt)
[symbols](symbols.txt)
[timer](timer.txt)
[throw](throw.txt)
[throw-error](throw_error.txt)
[trace](trace.txt)
[trace-highlight](trace_highlight.txt)

#### Importing libraries

[address](address.txt)
[callback](callback.txt)
[flt](flt.txt)
[float](float.txt)
[get-char](get_char.txt)
[get-float](get_float.txt)
[get-int](get_int.txt)
[get-long](get_long.txt)
[get-string](get_string.txt)
[import](import.txt)
[int](int.txt)
[pack](pack.txt)
[struct](struct.txt)
[unpack](unpack.txt)

#### newLISP internals API

[command-event](command_event.txt)
[cpymem](cpymem.txt)
[dump](dump.txt)
[prompt-event](prompt_event.txt)
[read-expr](read_expr.txt)
[reader-event](reader_event.txt)

